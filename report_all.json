{"created": 1716055839.4119062, "duration": 44.90772891044617, "exitcode": 0, "root": "D:\\dataPy\\miniProjectAPIAutomationPython", "environment": {}, "summary": {"passed": 12, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "test", "type": "Package"}]}, {"nodeid": "test/test_CREATE_USER/test_create_blank_email.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_blank_email.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER/test_create_blank_gender.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_blank_gender.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER/test_create_blank_name.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_blank_name.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER/test_create_blank_status.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_blank_status.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER/test_create_duplicate_email.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_duplicate_email.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER/test_create_failed_gender.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_failed_gender.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER/test_create_normal.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_normal.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_blank_email.py", "type": "Module"}, {"nodeid": "test/test_CREATE_USER/test_create_blank_gender.py", "type": "Module"}, {"nodeid": "test/test_CREATE_USER/test_create_blank_name.py", "type": "Module"}, {"nodeid": "test/test_CREATE_USER/test_create_blank_status.py", "type": "Module"}, {"nodeid": "test/test_CREATE_USER/test_create_duplicate_email.py", "type": "Module"}, {"nodeid": "test/test_CREATE_USER/test_create_failed_gender.py", "type": "Module"}, {"nodeid": "test/test_CREATE_USER/test_create_normal.py", "type": "Module"}]}, {"nodeid": "test/test_DELETE_USER/test_delete_user.py", "outcome": "passed", "result": [{"nodeid": "test/test_DELETE_USER/test_delete_user.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_DELETE_USER", "outcome": "passed", "result": [{"nodeid": "test/test_DELETE_USER/test_delete_user.py", "type": "Module"}]}, {"nodeid": "test/test_GET_USER/test_get_invalid_endpoint.py", "outcome": "passed", "result": [{"nodeid": "test/test_GET_USER/test_get_invalid_endpoint.py::test", "type": "Function", "lineno": 5}]}, {"nodeid": "test/test_GET_USER/test_get_normal.py", "outcome": "passed", "result": [{"nodeid": "test/test_GET_USER/test_get_normal.py::test", "type": "Function", "lineno": 5}]}, {"nodeid": "test/test_GET_USER/test_get_wrong_method.py", "outcome": "passed", "result": [{"nodeid": "test/test_GET_USER/test_get_wrong_method.py::test", "type": "Function", "lineno": 5}]}, {"nodeid": "test/test_GET_USER", "outcome": "passed", "result": [{"nodeid": "test/test_GET_USER/test_get_invalid_endpoint.py", "type": "Module"}, {"nodeid": "test/test_GET_USER/test_get_normal.py", "type": "Module"}, {"nodeid": "test/test_GET_USER/test_get_wrong_method.py", "type": "Module"}]}, {"nodeid": "test/test_UPDATE_USER/test_update_normal.py", "outcome": "passed", "result": [{"nodeid": "test/test_UPDATE_USER/test_update_normal.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_UPDATE_USER", "outcome": "passed", "result": [{"nodeid": "test/test_UPDATE_USER/test_update_normal.py", "type": "Module"}]}, {"nodeid": "test", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER", "type": "Package"}, {"nodeid": "test/test_DELETE_USER", "type": "Package"}, {"nodeid": "test/test_GET_USER", "type": "Package"}, {"nodeid": "test/test_UPDATE_USER", "type": "Package"}]}], "tests": [{"nodeid": "test/test_CREATE_USER/test_create_blank_email.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_blank_email.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.02490399999987858, "outcome": "passed", "stdout": "==================== Before All ====================\n==================== Before test ====================\n"}, "call": {"duration": 0.8071345999996993, "outcome": "passed"}, "teardown": {"duration": 2.3778800000000047, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_CREATE_USER/test_create_blank_gender.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_blank_gender.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0006599000007554423, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.6658371000012266, "outcome": "passed"}, "teardown": {"duration": 2.281057800000781, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_CREATE_USER/test_create_blank_name.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_blank_name.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0005875999995623715, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 1.3189536999998381, "outcome": "passed"}, "teardown": {"duration": 2.225194900000133, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_CREATE_USER/test_create_blank_status.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_blank_status.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.00041060000148718245, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 2.347450999999637, "outcome": "passed"}, "teardown": {"duration": 2.2714847000006557, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_CREATE_USER/test_create_duplicate_email.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_duplicate_email.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0005497999991348479, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 1.3497310000002471, "outcome": "passed"}, "teardown": {"duration": 2.158190000000104, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_CREATE_USER/test_create_failed_gender.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_failed_gender.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0007112000002962304, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.8958786999992299, "outcome": "passed"}, "teardown": {"duration": 2.133962199999587, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_CREATE_USER/test_create_normal.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_normal.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0005632000011246419, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.7304272999990644, "outcome": "passed"}, "teardown": {"duration": 2.134029799999553, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_DELETE_USER/test_delete_user.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_delete_user.py", "test_DELETE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0014460999991570134, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 3.0154363000001467, "outcome": "passed"}, "teardown": {"duration": 2.7025621000011597, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_GET_USER/test_get_invalid_endpoint.py::test", "lineno": 5, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_get_invalid_endpoint.py", "test_GET_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0013025999996898463, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 1.350404000000708, "outcome": "passed"}, "teardown": {"duration": 2.1798661000011634, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_GET_USER/test_get_normal.py::test", "lineno": 5, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_get_normal.py", "test_GET_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0007076999991113553, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.938359899999341, "outcome": "passed"}, "teardown": {"duration": 2.1830960999996023, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_GET_USER/test_get_wrong_method.py::test", "lineno": 5, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_get_wrong_method.py", "test_GET_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0005258000001049368, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.753398400000151, "outcome": "passed"}, "teardown": {"duration": 2.6921602000002167, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_UPDATE_USER/test_update_normal.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_update_normal.py", "test_UPDATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0013479999997798586, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 2.8412094000013894, "outcome": "passed"}, "teardown": {"duration": 2.197778899999321, "outcome": "passed", "stdout": "==================== After test ====================\n==================== After all ====================\n"}}], "warnings": [{"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_blank_email.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_blank_gender.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_blank_name.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_blank_status.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_duplicate_email.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_failed_gender.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_normal.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_DELETE_USER\\test_delete_user.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_GET_USER\\test_get_invalid_endpoint.py", "lineno": 6}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_GET_USER\\test_get_normal.py", "lineno": 6}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_GET_USER\\test_get_wrong_method.py", "lineno": 6}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_UPDATE_USER\\test_update_normal.py", "lineno": 8}]}