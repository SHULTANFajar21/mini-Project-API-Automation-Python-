{"created": 1716661999.811002, "duration": 41.205891132354736, "exitcode": 0, "root": "D:\\dataPy\\miniProjectAPIAutomationPython", "environment": {}, "summary": {"passed": 12, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "test", "type": "Package"}]}, {"nodeid": "test/test_CREATE_USER/test_create_blank_email.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_blank_email.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER/test_create_blank_gender.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_blank_gender.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER/test_create_blank_name.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_blank_name.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER/test_create_blank_status.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_blank_status.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER/test_create_duplicate_email.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_duplicate_email.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER/test_create_failed_gender.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_failed_gender.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER/test_create_normal.py", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_normal.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_CREATE_USER", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER/test_create_blank_email.py", "type": "Module"}, {"nodeid": "test/test_CREATE_USER/test_create_blank_gender.py", "type": "Module"}, {"nodeid": "test/test_CREATE_USER/test_create_blank_name.py", "type": "Module"}, {"nodeid": "test/test_CREATE_USER/test_create_blank_status.py", "type": "Module"}, {"nodeid": "test/test_CREATE_USER/test_create_duplicate_email.py", "type": "Module"}, {"nodeid": "test/test_CREATE_USER/test_create_failed_gender.py", "type": "Module"}, {"nodeid": "test/test_CREATE_USER/test_create_normal.py", "type": "Module"}]}, {"nodeid": "test/test_DELETE_USER/test_delete_user.py", "outcome": "passed", "result": [{"nodeid": "test/test_DELETE_USER/test_delete_user.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_DELETE_USER", "outcome": "passed", "result": [{"nodeid": "test/test_DELETE_USER/test_delete_user.py", "type": "Module"}]}, {"nodeid": "test/test_GET_USER/test_get_invalid_endpoint.py", "outcome": "passed", "result": [{"nodeid": "test/test_GET_USER/test_get_invalid_endpoint.py::test", "type": "Function", "lineno": 5}]}, {"nodeid": "test/test_GET_USER/test_get_normal.py", "outcome": "passed", "result": [{"nodeid": "test/test_GET_USER/test_get_normal.py::test", "type": "Function", "lineno": 5}]}, {"nodeid": "test/test_GET_USER/test_get_wrong_method.py", "outcome": "passed", "result": [{"nodeid": "test/test_GET_USER/test_get_wrong_method.py::test", "type": "Function", "lineno": 5}]}, {"nodeid": "test/test_GET_USER", "outcome": "passed", "result": [{"nodeid": "test/test_GET_USER/test_get_invalid_endpoint.py", "type": "Module"}, {"nodeid": "test/test_GET_USER/test_get_normal.py", "type": "Module"}, {"nodeid": "test/test_GET_USER/test_get_wrong_method.py", "type": "Module"}]}, {"nodeid": "test/test_UPDATE_USER/test_update_normal.py", "outcome": "passed", "result": [{"nodeid": "test/test_UPDATE_USER/test_update_normal.py::test", "type": "Function", "lineno": 7}]}, {"nodeid": "test/test_UPDATE_USER", "outcome": "passed", "result": [{"nodeid": "test/test_UPDATE_USER/test_update_normal.py", "type": "Module"}]}, {"nodeid": "test", "outcome": "passed", "result": [{"nodeid": "test/test_CREATE_USER", "type": "Package"}, {"nodeid": "test/test_DELETE_USER", "type": "Package"}, {"nodeid": "test/test_GET_USER", "type": "Package"}, {"nodeid": "test/test_UPDATE_USER", "type": "Package"}]}], "tests": [{"nodeid": "test/test_CREATE_USER/test_create_blank_email.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_blank_email.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.03080529999897408, "outcome": "passed", "stdout": "==================== Before All ====================\n==================== Before test ====================\n"}, "call": {"duration": 0.6413718999992852, "outcome": "passed"}, "teardown": {"duration": 2.4563244999990275, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_CREATE_USER/test_create_blank_gender.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_blank_gender.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0007242000010592164, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.7151085999994393, "outcome": "passed"}, "teardown": {"duration": 2.7635019999997894, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_CREATE_USER/test_create_blank_name.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_blank_name.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0007991000002220972, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.7142738999991707, "outcome": "passed"}, "teardown": {"duration": 3.172309400000813, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_CREATE_USER/test_create_blank_status.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_blank_status.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0006828000005043577, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.6126514999996289, "outcome": "passed"}, "teardown": {"duration": 2.458566299999802, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_CREATE_USER/test_create_duplicate_email.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_duplicate_email.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0006745999999111518, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.5079168999982357, "outcome": "passed", "stdout": "[{'field': 'email', 'message': 'has already been taken'}]\n"}, "teardown": {"duration": 2.559342700000343, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_CREATE_USER/test_create_failed_gender.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_failed_gender.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0006928000002517365, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.7412452999997186, "outcome": "passed"}, "teardown": {"duration": 2.531935599999997, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_CREATE_USER/test_create_normal.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_create_normal.py", "test_CREATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0010433000006742077, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.5709053999999014, "outcome": "passed"}, "teardown": {"duration": 2.3897644999997283, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_DELETE_USER/test_delete_user.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_delete_user.py", "test_DELETE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0014257999991968973, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 1.329582799999116, "outcome": "passed"}, "teardown": {"duration": 2.455175400000371, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_GET_USER/test_get_invalid_endpoint.py::test", "lineno": 5, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_get_invalid_endpoint.py", "test_GET_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0014520000004267786, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.6161554000009346, "outcome": "passed"}, "teardown": {"duration": 3.2714987999988807, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_GET_USER/test_get_normal.py::test", "lineno": 5, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_get_normal.py", "test_GET_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0006448999993153848, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.7151126999997359, "outcome": "passed"}, "teardown": {"duration": 2.455775000000358, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_GET_USER/test_get_wrong_method.py::test", "lineno": 5, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_get_wrong_method.py", "test_GET_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0006258000012167031, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 0.7070120000007591, "outcome": "passed"}, "teardown": {"duration": 2.464360800000577, "outcome": "passed", "stdout": "==================== After test ====================\n"}}, {"nodeid": "test/test_UPDATE_USER/test_update_normal.py::test", "lineno": 7, "outcome": "passed", "keywords": ["test", "QaseIO", "pytestmark", "test_update_normal.py", "test_UPDATE_USER", "miniProjectAPIAutomationPython", ""], "setup": {"duration": 0.0013364999995246762, "outcome": "passed", "stdout": "==================== Before test ====================\n"}, "call": {"duration": 1.4371318000012252, "outcome": "passed"}, "teardown": {"duration": 2.3627096000000165, "outcome": "passed", "stdout": "==================== After test ====================\n==================== After all ====================\n"}}], "warnings": [{"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_blank_email.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_blank_gender.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_blank_name.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_blank_status.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_duplicate_email.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_failed_gender.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_CREATE_USER\\test_create_normal.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_DELETE_USER\\test_delete_user.py", "lineno": 8}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_GET_USER\\test_get_invalid_endpoint.py", "lineno": 6}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_GET_USER\\test_get_normal.py", "lineno": 6}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_GET_USER\\test_get_wrong_method.py", "lineno": 6}, {"message": "Unknown pytest.mark.QaseIO - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "D:\\dataPy\\miniProjectAPIAutomationPython\\test\\test_UPDATE_USER\\test_update_normal.py", "lineno": 8}]}